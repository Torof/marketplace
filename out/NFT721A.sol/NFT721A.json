{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620010d0380380620010d0833981016040819052620000349162000247565b60408051808201825260088152670dcc8c505d195cdd60c21b6020808301918252835180850190945260048452633732316160e01b9084015281519192916200008091600291620001a1565b50805162000096906003906020840190620001a1565b50506000805550620000a93382620000b0565b506200029e565b6000546001600160a01b038316620000da57604051622e076360e81b815260040160405180910390fd5b81620000f95760405163b562e8dd60e01b815260040160405180910390fd5b6113888211156200011d57604051633db1f9af60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600482528083206001871460e11b4260a01b17851790558051600019868801018152905185927fdeaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d928290030190a40160005550565b828054620001af9062000261565b90600052602060002090601f016020900481019282620001d357600085556200021e565b82601f10620001ee57805160ff19168380011785556200021e565b828001600101855582156200021e579182015b828111156200021e57825182559160200191906001019062000201565b506200022c92915062000230565b5090565b5b808211156200022c576000815560010162000231565b6000602082840312156200025a57600080fd5b5051919050565b600181811c908216806200027657607f821691505b602082108114156200029857634e487b7160e01b600052602260045260246000fd5b50919050565b610e2280620002ae6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb465146101f4578063b88d4fde14610207578063c87b56dd1461021a578063e985e9c51461022d57600080fd5b80636352211e146101b357806370a08231146101c657806395d89b41146101d9578063a0712d68146101e157600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806318160ddd1461017757806323b872dd1461018d57806342842e0e146101a057600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610a89565b610269565b60405190151581526020015b60405180910390f35b61012a6102bb565b6040516101199190610afe565b61014a610145366004610b11565b61034d565b6040516001600160a01b039091168152602001610119565b610175610170366004610b46565b610391565b005b600154600054035b604051908152602001610119565b61017561019b366004610b70565b610431565b6101756101ae366004610b70565b6105c2565b61014a6101c1366004610b11565b6105e2565b61017f6101d4366004610bac565b6105ed565b61012a61063c565b6101756101ef366004610b11565b61064b565b610175610202366004610bc7565b610658565b610175610215366004610c19565b6106ee565b61012a610228366004610b11565b610738565b61010d61023b366004610cf5565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061029a57506380ac58cd60e01b6001600160e01b03198316145b806102b55750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546102ca90610d28565b80601f01602080910402602001604051908101604052809291908181526020018280546102f690610d28565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b5050505050905090565b6000610358826107ca565b610375576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061039c826105e2565b9050336001600160a01b038216146103d5576103b8813361023b565b6103d5576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061043c826107f1565b9050836001600160a01b0316816001600160a01b03161461046f5760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b038816909114176104bc5761049f863361023b565b6104bc57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166104e357604051633a954ecd60e21b815260040160405180910390fd5b80156104ee57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b831661057957600184016000818152600460205260409020546105775760005481146105775760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6105dd838383604051806020016040528060008152506106ee565b505050565b60006102b5826107f1565b60006001600160a01b038216610616576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ca90610d28565b6106553382610852565b50565b6001600160a01b0382163314156106825760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106f9848484610431565b6001600160a01b0383163b156107325761071584848484610949565b610732576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610743826107ca565b61076057604051630a14c4b560e41b815260040160405180910390fd5b600061077760408051602081019091526000815290565b905080516000141561079857604051806020016040528060008152506107c3565b806107a284610a31565b6040516020016107b3929190610d63565b6040516020818303038152906040525b9392505050565b60008054821080156102b5575050600090815260046020526040902054600160e01b161590565b60008160005481101561083957600081815260046020526040902054600160e01b8116610837575b806107c3575060001901600081815260046020526040902054610819565b505b604051636f96cda160e11b815260040160405180910390fd5b600054816108735760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b81811461092257808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016108ea565b508161094057604051622e076360e81b815260040160405180910390fd5b60005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061097e903390899088908890600401610d92565b6020604051808303816000875af19250505080156109b9575060408051601f3d908101601f191682019092526109b691810190610dcf565b60015b610a14573d8080156109e7576040519150601f19603f3d011682016040523d82523d6000602084013e6109ec565b606091505b508051610a0c576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080019081905280825b600183039250600a81066030018353600a900480610a5c57610a61565b610a3f565b50819003601f19909101908152919050565b6001600160e01b03198116811461065557600080fd5b600060208284031215610a9b57600080fd5b81356107c381610a73565b60005b83811015610ac1578181015183820152602001610aa9565b838111156107325750506000910152565b60008151808452610aea816020860160208601610aa6565b601f01601f19169290920160200192915050565b6020815260006107c36020830184610ad2565b600060208284031215610b2357600080fd5b5035919050565b80356001600160a01b0381168114610b4157600080fd5b919050565b60008060408385031215610b5957600080fd5b610b6283610b2a565b946020939093013593505050565b600080600060608486031215610b8557600080fd5b610b8e84610b2a565b9250610b9c60208501610b2a565b9150604084013590509250925092565b600060208284031215610bbe57600080fd5b6107c382610b2a565b60008060408385031215610bda57600080fd5b610be383610b2a565b915060208301358015158114610bf857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610c2f57600080fd5b610c3885610b2a565b9350610c4660208601610b2a565b925060408501359150606085013567ffffffffffffffff80821115610c6a57600080fd5b818701915087601f830112610c7e57600080fd5b813581811115610c9057610c90610c03565b604051601f8201601f19908116603f01168101908382118183101715610cb857610cb8610c03565b816040528281528a6020848701011115610cd157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610d0857600080fd5b610d1183610b2a565b9150610d1f60208401610b2a565b90509250929050565b600181811c90821680610d3c57607f821691505b60208210811415610d5d57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610d75818460208801610aa6565b835190830190610d89818360208801610aa6565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610dc590830184610ad2565b9695505050505050565b600060208284031215610de157600080fd5b81516107c381610a7356fea2646970667358221220d135d68f3becd3a7bca920029afe90c5a5e83addd56ab87bc2c5a3d4ba6414af64736f6c634300080a0033",
    "sourceMap": "115:195:3:-:0;;;165:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4903:154:43;;;;;;;;;;;-1:-1:-1;;;4903:154:43;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4903:154:43;;;;4969:13;;4903:154;;;4969:13;;:5;;:13;:::i;:::-;-1:-1:-1;4992:17:43;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;5439:7:43;5019:31;;-1:-1:-1;198:33:3;211:10;223:7;198:12;:33::i;:::-;165:69;115:195;;30318:1443:43;30397:20;30420:13;-1:-1:-1;;;;;30447:16:43;;30443:48;;30472:19;;-1:-1:-1;;;30472:19:43;;;;;;;;;;;30443:48;30505:13;30501:44;;30527:18;;-1:-1:-1;;;30527:18:43;;;;;;;;;;;30501:44;3099:4;30559:8;:43;30555:89;;;30611:33;;-1:-1:-1;;;30611:33:43;;;;;;;;;;;30555:89;-1:-1:-1;;;;;31045:22:43;;;;;;:18;:22;;;;1452:2;31045:22;;;:71;;31083:32;31071:45;;31045:71;;;31352:31;;;:17;:31;;;;;-1:-1:-1;15080:15:43;;15054:24;15050:46;14660:11;14635:23;14631:41;14628:52;14618:63;;31352:170;;31542:78;;-1:-1:-1;;31576:23:43;;;:27;349:25:46;;31542:78:43;;31352:31;;31542:78;;;;;;;;31651:23;31635:13;:39;-1:-1:-1;30318:1443:43:o;115:195:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:195:3;;;-1:-1:-1;115:195:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:184:46;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:46;;14:184;-1:-1:-1;14:184:46:o;385:380::-;464:1;460:12;;;;507;;;528:61;;582:4;574:6;570:17;560:27;;528:61;635:2;627:6;624:14;604:18;601:38;598:161;;;681:10;676:3;672:20;669:1;662:31;716:4;713:1;706:15;744:4;741:1;734:15;598:161;;385:380;;;:::o;:::-;115:195:3;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb465146101f4578063b88d4fde14610207578063c87b56dd1461021a578063e985e9c51461022d57600080fd5b80636352211e146101b357806370a08231146101c657806395d89b41146101d9578063a0712d68146101e157600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806318160ddd1461017757806323b872dd1461018d57806342842e0e146101a057600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610a89565b610269565b60405190151581526020015b60405180910390f35b61012a6102bb565b6040516101199190610afe565b61014a610145366004610b11565b61034d565b6040516001600160a01b039091168152602001610119565b610175610170366004610b46565b610391565b005b600154600054035b604051908152602001610119565b61017561019b366004610b70565b610431565b6101756101ae366004610b70565b6105c2565b61014a6101c1366004610b11565b6105e2565b61017f6101d4366004610bac565b6105ed565b61012a61063c565b6101756101ef366004610b11565b61064b565b610175610202366004610bc7565b610658565b610175610215366004610c19565b6106ee565b61012a610228366004610b11565b610738565b61010d61023b366004610cf5565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061029a57506380ac58cd60e01b6001600160e01b03198316145b806102b55750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546102ca90610d28565b80601f01602080910402602001604051908101604052809291908181526020018280546102f690610d28565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b5050505050905090565b6000610358826107ca565b610375576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061039c826105e2565b9050336001600160a01b038216146103d5576103b8813361023b565b6103d5576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061043c826107f1565b9050836001600160a01b0316816001600160a01b03161461046f5760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b038816909114176104bc5761049f863361023b565b6104bc57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166104e357604051633a954ecd60e21b815260040160405180910390fd5b80156104ee57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b831661057957600184016000818152600460205260409020546105775760005481146105775760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6105dd838383604051806020016040528060008152506106ee565b505050565b60006102b5826107f1565b60006001600160a01b038216610616576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ca90610d28565b6106553382610852565b50565b6001600160a01b0382163314156106825760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106f9848484610431565b6001600160a01b0383163b156107325761071584848484610949565b610732576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610743826107ca565b61076057604051630a14c4b560e41b815260040160405180910390fd5b600061077760408051602081019091526000815290565b905080516000141561079857604051806020016040528060008152506107c3565b806107a284610a31565b6040516020016107b3929190610d63565b6040516020818303038152906040525b9392505050565b60008054821080156102b5575050600090815260046020526040902054600160e01b161590565b60008160005481101561083957600081815260046020526040902054600160e01b8116610837575b806107c3575060001901600081815260046020526040902054610819565b505b604051636f96cda160e11b815260040160405180910390fd5b600054816108735760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b81811461092257808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016108ea565b508161094057604051622e076360e81b815260040160405180910390fd5b60005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061097e903390899088908890600401610d92565b6020604051808303816000875af19250505080156109b9575060408051601f3d908101601f191682019092526109b691810190610dcf565b60015b610a14573d8080156109e7576040519150601f19603f3d011682016040523d82523d6000602084013e6109ec565b606091505b508051610a0c576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080019081905280825b600183039250600a81066030018353600a900480610a5c57610a61565b610a3f565b50819003601f19909101908152919050565b6001600160e01b03198116811461065557600080fd5b600060208284031215610a9b57600080fd5b81356107c381610a73565b60005b83811015610ac1578181015183820152602001610aa9565b838111156107325750506000910152565b60008151808452610aea816020860160208601610aa6565b601f01601f19169290920160200192915050565b6020815260006107c36020830184610ad2565b600060208284031215610b2357600080fd5b5035919050565b80356001600160a01b0381168114610b4157600080fd5b919050565b60008060408385031215610b5957600080fd5b610b6283610b2a565b946020939093013593505050565b600080600060608486031215610b8557600080fd5b610b8e84610b2a565b9250610b9c60208501610b2a565b9150604084013590509250925092565b600060208284031215610bbe57600080fd5b6107c382610b2a565b60008060408385031215610bda57600080fd5b610be383610b2a565b915060208301358015158114610bf857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610c2f57600080fd5b610c3885610b2a565b9350610c4660208601610b2a565b925060408501359150606085013567ffffffffffffffff80821115610c6a57600080fd5b818701915087601f830112610c7e57600080fd5b813581811115610c9057610c90610c03565b604051601f8201601f19908116603f01168101908382118183101715610cb857610cb8610c03565b816040528281528a6020848701011115610cd157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610d0857600080fd5b610d1183610b2a565b9150610d1f60208401610b2a565b90509250929050565b600181811c90821680610d3c57607f821691505b60208210811415610d5d57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610d75818460208801610aa6565b835190830190610d89818360208801610aa6565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610dc590830184610ad2565b9695505050505050565b600060208284031215610de157600080fd5b81516107c381610a7356fea2646970667358221220d135d68f3becd3a7bca920029afe90c5a5e83addd56ab87bc2c5a3d4ba6414af64736f6c634300080a0033",
    "sourceMap": "115:195:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9112:630:43;;;;;;:::i;:::-;;:::i;:::-;;;565:14:46;;558:22;540:41;;528:2;513:18;9112:630:43;;;;;;;;9996:98;;;:::i;:::-;;;;;;;:::i;16309:214::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:46;;;1674:51;;1662:2;1647:18;16309:214:43;1528:203:46;15769:390:43;;;;;;:::i;:::-;;:::i;:::-;;5851:317;6121:12;;5912:7;6105:13;:28;5851:317;;;2319:25:46;;;2307:2;2292:18;5851:317:43;2173:177:46;19918:2756:43;;;;;;:::i;:::-;;:::i;22765:179::-;;;;;;:::i;:::-;;:::i;11348:150::-;;;;;;:::i;:::-;;:::i;7002:230::-;;;;;;:::i;:::-;;:::i;10165:102::-;;;:::i;236:72:3:-;;;;;;:::i;:::-;;:::i;16850:303:43:-;;;;;;:::i;:::-;;:::i;23525:388::-;;;;;;:::i;:::-;;:::i;10368:313::-;;;;;;:::i;:::-;;:::i;17303:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;17423:25:43;;;17400:4;17423:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17303:162;9112:630;9197:4;-1:-1:-1;;;;;;;;;9515:25:43;;;;:101;;-1:-1:-1;;;;;;;;;;9591:25:43;;;9515:101;:177;;;-1:-1:-1;;;;;;;;;;9667:25:43;;;9515:177;9496:196;9112:630;-1:-1:-1;;9112:630:43:o;9996:98::-;10050:13;10082:5;10075:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9996:98;:::o;16309:214::-;16385:7;16409:16;16417:7;16409;:16::i;:::-;16404:64;;16434:34;;-1:-1:-1;;;16434:34:43;;;;;;;;;;;16404:64;-1:-1:-1;16486:24:43;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;16486:30:43;;16309:214::o;15769:390::-;15849:13;15865:16;15873:7;15865;:16::i;:::-;15849:32;-1:-1:-1;39008:10:43;-1:-1:-1;;;;;15896:28:43;;;15892:172;;15943:44;15960:5;39008:10;17303:162;:::i;15943:44::-;15938:126;;16014:35;;-1:-1:-1;;;16014:35:43;;;;;;;;;;;15938:126;16074:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16074:35:43;-1:-1:-1;;;;;16074:35:43;;;;;;;;;16124:28;;16074:24;;16124:28;;;;;;;15839:320;15769:390;;:::o;19918:2756::-;20047:27;20077;20096:7;20077:18;:27::i;:::-;20047:57;;20160:4;-1:-1:-1;;;;;20119:45:43;20135:19;-1:-1:-1;;;;;20119:45:43;;20115:86;;20173:28;;-1:-1:-1;;;20173:28:43;;;;;;;;;;;20115:86;20213:27;19057:24;;;:15;:24;;;;;19275:26;;39008:10;18694:30;;;-1:-1:-1;;;;;18391:28:43;;18672:20;;;18669:56;20396:179;;20488:43;20505:4;39008:10;17303:162;:::i;20488:43::-;20483:92;;20540:35;;-1:-1:-1;;;20540:35:43;;;;;;;;;;;20483:92;-1:-1:-1;;;;;20590:16:43;;20586:52;;20615:23;;-1:-1:-1;;;20615:23:43;;;;;;;;;;;20586:52;20781:15;20778:157;;;20919:1;20898:19;20891:30;20778:157;-1:-1:-1;;;;;21307:24:43;;;;;;;:18;:24;;;;;;21305:26;;-1:-1:-1;;21305:26:43;;;21375:22;;;;;;;;;21373:24;;-1:-1:-1;21373:24:43;;;14660:11;14635:23;14631:41;14618:63;-1:-1:-1;;;14618:63:43;21661:26;;;;:17;:26;;;;;:172;-1:-1:-1;;;21950:47:43;;21946:617;;22054:1;22044:11;;22022:19;22175:30;;;:17;:30;;;;;;22171:378;;22311:13;;22296:11;:28;22292:239;;22456:30;;;;:17;:30;;;;;:52;;;22292:239;22004:559;21946:617;22607:7;22603:2;-1:-1:-1;;;;;22588:27:43;22597:4;-1:-1:-1;;;;;22588:27:43;;;;;;;;;;;20037:2637;;;19918:2756;;;:::o;22765:179::-;22898:39;22915:4;22921:2;22925:7;22898:39;;;;;;;;;;;;:16;:39::i;:::-;22765:179;;;:::o;11348:150::-;11420:7;11462:27;11481:7;11462:18;:27::i;7002:230::-;7074:7;-1:-1:-1;;;;;7097:19:43;;7093:60;;7125:28;;-1:-1:-1;;;7125:28:43;;;;;;;;;;;7093:60;-1:-1:-1;;;;;;7170:25:43;;;;;:18;:25;;;;;;1317:13;7170:55;;7002:230::o;10165:102::-;10221:13;10253:7;10246:14;;;;;:::i;236:72:3:-;279:26;285:10;297:7;279:5;:26::i;:::-;236:72;:::o;16850:303:43:-;-1:-1:-1;;;;;16948:31:43;;39008:10;16948:31;16944:61;;;16988:17;;-1:-1:-1;;;16988:17:43;;;;;;;;;;;16944:61;39008:10;17016:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;17016:49:43;;;;;;;;;;;;:60;;-1:-1:-1;;17016:60:43;;;;;;;;;;17091:55;;540:41:46;;;17016:49:43;;39008:10;17091:55;;513:18:46;17091:55:43;;;;;;;16850:303;;:::o;23525:388::-;23686:31;23699:4;23705:2;23709:7;23686:12;:31::i;:::-;-1:-1:-1;;;;;23731:14:43;;;:19;23727:180;;23769:56;23800:4;23806:2;23810:7;23819:5;23769:30;:56::i;:::-;23764:143;;23852:40;;-1:-1:-1;;;23852:40:43;;;;;;;;;;;23764:143;23525:388;;;;:::o;10368:313::-;10441:13;10471:16;10479:7;10471;:16::i;:::-;10466:59;;10496:29;;-1:-1:-1;;;10496:29:43;;;;;;;;;;;10466:59;10536:21;10560:10;11002:9;;;;;;;;;-1:-1:-1;11002:9:43;;;10926:92;10560:10;10536:34;;10593:7;10587:21;10612:1;10587:26;;:87;;;;;;;;;;;;;;;;;10640:7;10649:18;10659:7;10649:9;:18::i;:::-;10623:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10587:87;10580:94;10368:313;-1:-1:-1;;;10368:313:43:o;17714:277::-;17779:4;17866:13;;17856:7;:23;17814:151;;;;-1:-1:-1;;17916:26:43;;;;:17;:26;;;;;;-1:-1:-1;;;17916:44:43;:49;;17714:277::o;12472:1249::-;12539:7;12573;12671:13;;12664:4;:20;12660:997;;;12708:14;12725:23;;;:17;:23;;;;;;-1:-1:-1;;;12812:24:43;;12808:831;;13467:111;13474:11;13467:111;;-1:-1:-1;;;13544:6:43;13526:25;;;;:17;:25;;;;;;13467:111;;12808:831;12686:971;12660:997;13683:31;;-1:-1:-1;;;13683:31:43;;;;;;;;;;;27082:2396;27154:20;27177:13;27204;27200:44;;27226:18;;-1:-1:-1;;;27226:18:43;;;;;;;;;;;27200:44;-1:-1:-1;;;;;27719:22:43;;;;;;:18;:22;;;;1452:2;27719:22;;;:71;;27757:32;27745:45;;27719:71;;;28026:31;;;:17;:31;;;;;-1:-1:-1;15080:15:43;;15054:24;15050:46;14660:11;14635:23;14631:41;14628:52;14618:63;;28026:170;;28255:23;;;;28026:31;;27719:22;;28744:25;27719:22;;28600:328;29005:1;28991:12;28987:20;28946:339;29045:3;29036:7;29033:16;28946:339;;29259:7;29249:8;29246:1;29219:25;29216:1;29213;29208:59;29097:1;29084:15;28946:339;;;-1:-1:-1;29316:13:43;29312:45;;29338:19;;-1:-1:-1;;;29338:19:43;;;;;;;;;;;29312:45;29372:13;:19;-1:-1:-1;22765:179:43;;;:::o;25939:697::-;26117:88;;-1:-1:-1;;;26117:88:43;;26097:4;;-1:-1:-1;;;;;26117:45:43;;;;;:88;;39008:10;;26184:4;;26190:7;;26199:5;;26117:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26117:88:43;;;;;;;;-1:-1:-1;;26117:88:43;;;;;;;;;;;;:::i;:::-;;;26113:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26395:13:43;;26391:229;;26440:40;;-1:-1:-1;;;26440:40:43;;;;;;;;;;;26391:229;26580:6;26574:13;26565:6;26561:2;26557:15;26550:38;26113:517;-1:-1:-1;;;;;;26273:64:43;-1:-1:-1;;;26273:64:43;;-1:-1:-1;25939:697:43;;;;;;:::o;39122:1548::-;39599:4;39593:11;;39606:4;39589:22;39683:17;;;;39589:22;40033:5;40015:419;40080:1;40075:3;40071:11;40064:18;;40248:2;40242:4;40238:13;40234:2;40230:22;40225:3;40217:36;40340:2;40330:13;;;40395:25;;40413:5;;40395:25;40015:419;;;-1:-1:-1;40462:13:43;;;-1:-1:-1;;40575:14:43;;;40635:19;;;40575:14;39122:1548;-1:-1:-1;39122:1548:43:o;14:131:46:-;-1:-1:-1;;;;;;88:32:46;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:46;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:46;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:46:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:46;;1343:180;-1:-1:-1;1343:180:46:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:46;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:46:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:186::-;2747:6;2800:2;2788:9;2779:7;2775:23;2771:32;2768:52;;;2816:1;2813;2806:12;2768:52;2839:29;2858:9;2839:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:46;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;5156:470::-;5335:3;5373:6;5367:13;5389:53;5435:6;5430:3;5423:4;5415:6;5411:17;5389:53;:::i;:::-;5505:13;;5464:16;;;;5527:57;5505:13;5464:16;5561:4;5549:17;;5527:57;:::i;:::-;5600:20;;5156:470;-1:-1:-1;;;;5156:470:46:o;5631:489::-;-1:-1:-1;;;;;5900:15:46;;;5882:34;;5952:15;;5947:2;5932:18;;5925:43;5999:2;5984:18;;5977:34;;;6047:3;6042:2;6027:18;;6020:31;;;5825:4;;6068:46;;6094:19;;6086:6;6068:46;:::i;:::-;6060:54;5631:489;-1:-1:-1;;;;;;5631:489:46:o;6125:249::-;6194:6;6247:2;6235:9;6226:7;6222:23;6218:32;6215:52;;;6263:1;6260;6253:12;6215:52;6295:9;6289:16;6314:30;6338:5;6314:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(uint256)": "a0712d68",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFT721A.sol\":\"NFT721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/NFT721A.sol\":{\"keccak256\":\"0xf6352851add2d551601a7862685a7bbe75d9afcc0a6a2f33b01e7388c5081ee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a45553412d52ba8964944d74df7521e47edb5ec7d76d98fc94ee8f376567c10\",\"dweb:/ipfs/QmaNm1CkkBx87ihqBorG62TMiM1nQfQU9SYV4XVnyYJ5jr\"]},\"node_modules/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x38055fa99acc16da1d33b3917194b9257a03be4a22c516d967df544d7e15368d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb6a438191b95c79adde0915203a87c69f330855ac0adf6e618dbb387aeb93f7\",\"dweb:/ipfs/QmeftASprpvorq9A7j8UzY5SDEvmzLpXRVxHAdNmW4wiMA\"]},\"node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x9c94731c43a2320e54f9128ad972659b07536d908bc08490213616e2dc26dea9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b48d00b493a1573e0378a69740c88280835515dec1360394a708e20df36bc27\",\"dweb:/ipfs/QmZqvycpgbLJ3oeBqhNTExQeqNtBx97kBkt9xSESjTrgq2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a/=node_modules/erc721a/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/NFT721A.sol": "NFT721A"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/NFT721A.sol": {
        "keccak256": "0xf6352851add2d551601a7862685a7bbe75d9afcc0a6a2f33b01e7388c5081ee6",
        "urls": [
          "bzz-raw://0a45553412d52ba8964944d74df7521e47edb5ec7d76d98fc94ee8f376567c10",
          "dweb:/ipfs/QmaNm1CkkBx87ihqBorG62TMiM1nQfQU9SYV4XVnyYJ5jr"
        ],
        "license": "MIT"
      },
      "node_modules/erc721a/contracts/ERC721A.sol": {
        "keccak256": "0x38055fa99acc16da1d33b3917194b9257a03be4a22c516d967df544d7e15368d",
        "urls": [
          "bzz-raw://bb6a438191b95c79adde0915203a87c69f330855ac0adf6e618dbb387aeb93f7",
          "dweb:/ipfs/QmeftASprpvorq9A7j8UzY5SDEvmzLpXRVxHAdNmW4wiMA"
        ],
        "license": "MIT"
      },
      "node_modules/erc721a/contracts/IERC721A.sol": {
        "keccak256": "0x9c94731c43a2320e54f9128ad972659b07536d908bc08490213616e2dc26dea9",
        "urls": [
          "bzz-raw://8b48d00b493a1573e0378a69740c88280835515dec1360394a708e20df36bc27",
          "dweb:/ipfs/QmZqvycpgbLJ3oeBqhNTExQeqNtBx97kBkt9xSESjTrgq2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/NFT721A.sol",
    "id": 1904,
    "exportedSymbols": {
      "ERC721A": [
        34119
      ],
      "ERC721A__IERC721Receiver": [
        32506
      ],
      "IERC721A": [
        34328
      ],
      "NFT721A": [
        1903
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:277:3",
    "nodes": [
      {
        "id": 1873,
        "nodeType": "PragmaDirective",
        "src": "33:23:3",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 1874,
        "nodeType": "ImportDirective",
        "src": "58:55:3",
        "nodes": [],
        "absolutePath": "node_modules/erc721a/contracts/ERC721A.sol",
        "file": "../node_modules/erc721a/contracts/ERC721A.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1904,
        "sourceUnit": 34120,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1903,
        "nodeType": "ContractDefinition",
        "src": "115:195:3",
        "nodes": [
          {
            "id": 1890,
            "nodeType": "FunctionDefinition",
            "src": "165:69:3",
            "nodes": [],
            "body": {
              "id": 1889,
              "nodeType": "Block",
              "src": "192:42:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1884,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "211:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "211:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1886,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1880,
                        "src": "223:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1883,
                      "name": "_mintERC2309",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33767,
                      "src": "198:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "198:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1888,
                  "nodeType": "ExpressionStatement",
                  "src": "198:33:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1880,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "183:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1890,
                  "src": "178:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1879,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "178:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "177:14:3"
            },
            "returnParameters": {
              "id": 1882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "192:0:3"
            },
            "scope": 1903,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1902,
            "nodeType": "FunctionDefinition",
            "src": "236:72:3",
            "nodes": [],
            "body": {
              "id": 1901,
              "nodeType": "Block",
              "src": "273:35:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1896,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "285:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "285:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1898,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1892,
                        "src": "297:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1895,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33655,
                      "src": "279:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "279:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1900,
                  "nodeType": "ExpressionStatement",
                  "src": "279:26:3"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "245:4:3",
            "parameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1892,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "255:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1902,
                  "src": "250:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1891,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "249:14:3"
            },
            "returnParameters": {
              "id": 1894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "273:0:3"
            },
            "scope": 1903,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "3732314174657374",
                "id": 1876,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "143:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_0e1d34146df2c83a3e0008c576d33d3853befd5a5bfb1090a0f29e75325d6172",
                  "typeString": "literal_string \"721Atest\""
                },
                "value": "721Atest"
              },
              {
                "hexValue": "37323161",
                "id": 1877,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "154:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_f3d313891f73c5061bc0a7c594b8f9013ad2f3ec0aaccfa4773cb31dc569c205",
                  "typeString": "literal_string \"721a\""
                },
                "value": "721a"
              }
            ],
            "baseName": {
              "id": 1875,
              "name": "ERC721A",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34119,
              "src": "135:7:3"
            },
            "id": 1878,
            "nodeType": "InheritanceSpecifier",
            "src": "135:26:3"
          }
        ],
        "canonicalName": "NFT721A",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1903,
          34119,
          34328
        ],
        "name": "NFT721A",
        "nameLocation": "124:7:3",
        "scope": 1904,
        "usedErrors": [
          34125,
          34128,
          34131,
          34134,
          34137,
          34140,
          34143,
          34146,
          34149,
          34152,
          34155,
          34158,
          34161,
          34164
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 3
}